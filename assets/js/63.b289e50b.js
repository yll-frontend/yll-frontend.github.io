(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{387:function(n,s,t){"use strict";t.r(s);var a=t(4),e=Object(a.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("请实现 copyRandomList 函数，复制一个复杂链表。在复杂链表中，每个节点除了有一个 next 指针指向下一个节点，还有一个 random 指针指向链表中的任意节点或者 null。")]),n._v(" "),s("p",[n._v("示例 1：")]),n._v(" "),s("p",[n._v("输入：head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n输出：[[7,null],[13,0],[11,4],[10,2],[1,0]]\n示例 2：")]),n._v(" "),s("p",[n._v("输入：head = [[1,1],[2,1]]\n输出：[[1,1],[2,1]]\n示例 3：")]),n._v(" "),s("p",[n._v("输入：head = [[3,null],[3,0],[3,null]]\n输出：[[3,null],[3,0],[3,null]]\n示例 4：")]),n._v(" "),s("p",[n._v("输入：head = []\n输出：[]\n解释：给定的链表为空（空指针），因此返回 null。")]),n._v(" "),s("p",[n._v("提示：")]),n._v(" "),s("p",[n._v("-10000 <= Node.val <= 10000\nNode.random 为空（null）或指向链表中的节点。\n节点数目不超过 1000 。")]),n._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * // Definition for a Node.\n * function Node(val, next, random) {\n *    this.val = val;\n *    this.next = next;\n *    this.random = random;\n * };\n */")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * @param {Node} head\n * @return {Node}\n */")]),n._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("//哈希表")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("var")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[n._v("copyRandomList")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!")]),n._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" head\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("const")]),n._v(" nodeMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("let")]),n._v(" node "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" head\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n        nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("new")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n        node "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    node "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" head\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n      nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("===")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("undefined")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("?")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("null")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v("nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" \n      nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("random "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("random"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n      node "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("next\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" nodeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("head"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);