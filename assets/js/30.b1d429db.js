(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{354:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-什么是虚拟do"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是虚拟do"}},[t._v("#")]),t._v(" 1.什么是虚拟DO")]),t._v(" "),s("p",[t._v("虚拟DOM是将状态映射成视图的众多解决方案中的一种，它的运作原理是使用状态生成虚拟节点，然后使用虚拟节点渲染视图。")]),t._v(" "),s("h2",{attrs:{id:"_2-为什么需要虚拟dom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么需要虚拟dom"}},[t._v("#")]),t._v(" 2.为什么需要虚拟DOM")]),t._v(" "),s("p",[t._v("如果直接用状态生成真实DOM，会有一定程度的性能浪费。而先创建虚拟节点再渲染视图，就可以将虚拟节点缓存，然后使用新创建的虚拟节点和上一次渲染时缓存的虚拟节点进行对比，然后根据对比结果只更新需要更新的真实DOM节点，从而避免不必要的DOM操作，节省一定的性能开销。")]),t._v(" "),s("h2",{attrs:{id:"_3-vue中的虚拟dom做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-vue中的虚拟dom做了什么"}},[t._v("#")]),t._v(" 3.Vue中的虚拟DOM做了什么")]),t._v(" "),s("p",[t._v("Vue.js中通过模板来描述状态与视图之间的映射关系，所以它会先将模板编译成渲染函数，然后执行渲染函数生成虚拟节点，最后使用虚拟节点更新视图。虚拟DOM在Vue.js中所做的由于“新后”与“旧后”这两个节点的位置相同，所以只需要执行更新节点的操作即可，不需要执行移动节点的操作。事是提供虚拟节点vnode和对新旧两个vnode进行比对，并根据比对结果进行DOM操作来更新视图。")]),t._v(" "),s("h2",{attrs:{id:"_4-什么是vnode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-什么是vnode"}},[t._v("#")]),t._v(" 4.什么是VNode")]),t._v(" "),s("p",[t._v("在Vue.js中存在一个VNode类，使用它可以实例化不同类型的vnode实例，而不同类型的vnode实例各自表示不同类型的DOM元素。例如，DOM元素有元素节点、文本节点和注释节点等，vnode实例也会对应着有元素节点、文本节点和注释节点等。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VNode")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("tag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" componentOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" asyncFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tag\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" children\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" elm\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("functionalContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("functionalOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("functionalScopeId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentOptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" componentOptions\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isStatic "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isRootInsert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isCloned "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isOnce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asyncFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asyncFactory\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asyncMeta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAsyncPlaceholder "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("componentInstance\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br")])]),s("p",[t._v("vnode只是一个名字，本质上其实是JavaScript中一个普通的对象，是从VNode类实例化的对象。我们用这个JavaScript对象来描述一个真实DOM元素的话，那么该DOM元素上的所有属性在VNode这个对象上都存在对应的属性。简单地说，vnode可以理解成节点描述对象，它描述了应该怎样去创建真实的DOM节点。例如，tag表示一个元素节点的名称，text表示一个文本节点的文本，children表示子节点等。")]),t._v(" "),s("h2",{attrs:{id:"_5-vnode的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-vnode的作用"}},[t._v("#")]),t._v(" 5.VNode的作用")]),t._v(" "),s("p",[t._v("Vue.js目前对状态的侦测策略采用了中等粒度。当状态发生变化时，只通知到组件级别，然后组件内使用虚拟DOM来渲染视图。也就是说，只要组件使用的众多状态中有一个发生了变化，那么整个组件就要重新渲染。如果组件只有一个节点发生了变化，那么重新渲染整个组件的所有节点，很明显会造成很大的性能浪费。由于每次渲染视图时都是先创建vnode，然后使用它创建真实DOM插入到页面中，所以可以将上一次渲染视图时所创建的vnode缓存起来，之后每当需要重新渲染视图时，将新创建的vnode和上一次缓存的vnode进行对比，查看它们之间有哪些不一样的地方，找出这些不一样的地方并基于此去修改真实的DOM。")]),t._v(" "),s("h2",{attrs:{id:"_6-vnode的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-vnode的类型"}},[t._v("#")]),t._v(" 6.VNode的类型")]),t._v(" "),s("p",[t._v("vnode的类型有以下几种：")]),t._v(" "),s("ul",[s("li",[t._v("注释节点")]),t._v(" "),s("li",[t._v("文本节点")]),t._v(" "),s("li",[t._v("元素节点")]),t._v(" "),s("li",[t._v("组件节点")]),t._v(" "),s("li",[t._v("函数式组件")]),t._v(" "),s("li",[t._v("克隆节点")])]),t._v(" "),s("p",[t._v("不同类型的vnode之间只是属性不同")]),t._v(" "),s("h2",{attrs:{id:"_7-patch介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-patch介绍"}},[t._v("#")]),t._v(" 7.patch介绍")]),t._v(" "),s("p",[t._v("patch也可以叫作patching算法，通过它渲染真实DOM时，并不是暴力覆盖原有DOM，而是比对新旧两个vnode之间有哪些不同，然后根据对比结果找出需要更新的节点进行更新。patch本身有补丁、修补等意思，其实际作用是在现有DOM上进行修改来实现更新视图的目的。之所以要这么做，主要是因为DOM操作的执行速度远不如JavaScript的运算速度快。因此可以把大量的DOM操作搬运到JavaScript中，使用patching算法来计算出真正需要更新的节点，最大限度地减少DOM操作，使用JavaScript的运算成本来替换DOM操作的执行成本。")]),t._v(" "),s("h2",{attrs:{id:"_8-patch的运行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-patch的运行流程"}},[t._v("#")]),t._v(" 8.patch的运行流程")]),t._v(" "),s("p",[t._v("当oldVnode和vnode不一样的时候，以vnode为准来渲染视图。当oldVnode不存在时，直接使用vnode渲染视图；当oldVnode和vnode都存在但并不是同一个节点时，使用vnode创建的DOM元素替换旧的DOM元素；当oldVnode和vnode是同一个节点时，使用更详细的对比操作对真实的DOM节点进行更新")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4bcv.jpeg",alt:"测试"}})]),t._v(" "),s("h2",{attrs:{id:"_9-更新节点的整体逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-更新节点的整体逻辑"}},[t._v("#")]),t._v(" 9.更新节点的整体逻辑")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4OtU.jpeg",alt:"测试"}})]),t._v(" "),s("h2",{attrs:{id:"_10-子节点更新策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-子节点更新策略"}},[t._v("#")]),t._v(" 10.子节点更新策略")]),t._v(" "),s("h3",{attrs:{id:"创建子节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建子节点"}},[t._v("#")]),t._v(" 创建子节点")]),t._v(" "),s("p",[t._v("新旧两个子节点列表是通过循环进行比对的，所以创建节点的操作是在循环体内执行的，其具体实现是在oldChildren（旧子节点列表）中寻找本次循环所指向的新子节点。如果在oldChildren中没有找到与本次循环所指向的新子节点相同的节点，那么说明本次循环所指向的新子节点是一个新增节点。对于新增节点，我们需要执行创建节点的操作，并将新创建的节点插入到oldChildren中所有未处理节点（未处理就是没有进行任何更新操作的节点）的前面。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4js3.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("上图表示已经对前两个子节点进行了更新，当前正在处理第三个子节点。当在右下角的虚拟子节点中找不到与左下角的第三个节点相同的节点时，证明它是新增节点，这时候需要创建节点并插入到真实DOM中，插入的位置是所有未处理节点的前面，也就是虚线所指定的位置。需要注意的是插入到所有已处理节点的后面不也行吗？不是的，如果这个新节点后面也是一个新增节点呢，那会导致第二个新增节点与第一个新增节点位置相反")]),t._v(" "),s("h3",{attrs:{id:"移动子节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移动子节点"}},[t._v("#")]),t._v(" 移动子节点")]),t._v(" "),s("p",[t._v("移动节点通常发生在newChildren中的某个节点和oldChildren中的某个节点是同一个节点，但是位置不同，所以在真实的DOM中需要将这个节点的位置以新虚拟节点的位置为基准进行移动。怎么知道应该把节点移动到哪里呢？对比两个子节点列表是通过从左到右循环newChildren这个列表，然后每循环一个节点，就去oldChildren中寻找与这个节点相同的节点进行处理。也就是说，newChildren中当前被循环到的这个节点的左边都是被处理过的。那就不难发现，这个节点的位置是所有未处理节点的第一个节点。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4Iyy.jpeg",alt:"测试"}})]),t._v(" "),s("h2",{attrs:{id:"_11-优化策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-优化策略"}},[t._v("#")]),t._v(" 11.优化策略")]),t._v(" "),s("p",[t._v("通常情况下，并不是所有子节点的位置都会发生移动，一个列表中总有几个节点的位置是不变的。只需要尝试使用相同位置的两个节点来比对是否是同一个节点：如果恰巧是同一个节点，直接就可以进入更新节点的操作；如果尝试失败了，再用循环的方式来查找节点。这样做可以很大程度地避免循环oldChildren来查找节点，从而使执行速度得到很大的提升。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4N85.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("如图上所示，先定义4个节点名称：")]),t._v(" "),s("ul",[s("li",[t._v("新前：newChildren中所有未处理的第一个节点。")]),t._v(" "),s("li",[t._v("新后：newChildren中所有未处理的最后一个节点。")]),t._v(" "),s("li",[t._v("旧前：oldChildren中所有未处理的第一个节点。")]),t._v(" "),s("li",[t._v("旧后：oldChildren中所有未处理的最后一个节点。")])]),t._v(" "),s("p",[t._v("接下来介绍4种快捷查找方式：")]),t._v(" "),s("h4",{attrs:{id:"新前与旧前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新前与旧前"}},[t._v("#")]),t._v(" 新前与旧前")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4rG8.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("尝试使用“新前”这个节点与“旧前”这个节点对比，对比它们俩是不是同一个节点。如果是同一个节点，则说明我们不费吹灰之力就在oldChildren中找到了这个虚拟节点，由于“新前”与“旧前”的位置相同，所以并不需要执行移动节点的操作，只需要更新节点即可。")]),t._v(" "),s("h4",{attrs:{id:"新后与旧后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新后与旧后"}},[t._v("#")]),t._v(" 新后与旧后")]),t._v(" "),s("p",[t._v("当“新前”与“旧前”对比后发现不是同一个节点，这时可以尝试用“新后”与“旧后”的方式来比对它们俩是否是同一个节点。如果是同一个节点，就将这两个节点进行对比并更新视图。由于“新后”与“旧后”这两个节点的位置相同，所以只需要执行更新节点的操作即可，不需要执行移动节点的操作。")]),t._v(" "),s("h4",{attrs:{id:"新后与旧前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新后与旧前"}},[t._v("#")]),t._v(" 新后与旧前")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W43qZ.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("如果“新后”与“旧前”是同一个节点，那么由于它们的位置不同，所以除了更新节点外，还需要执行移动节点的操作。在真实DOM中除了做更新操作外，还需要将节点移动到oldChildren中所有未处理节点的最后面。")]),t._v(" "),s("p",[t._v("为什么是最后面？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4cwF.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("如图所示，当真实DOM子节点左右两侧已经有节点被更新，只有中间这部分节点未处理时，“新后”这个节点是未处理节点中的最后一个节点，所以真实DOM节点移动位置时，需要移动到oldChildren中所有未处理节点的最后面。只有移动到未处理节点的最后面，它的位置才与“新后”这个节点的位置相同。")]),t._v(" "),s("h4",{attrs:{id:"新前与旧后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新前与旧后"}},[t._v("#")]),t._v(" 新前与旧后")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://i.328888.xyz/2023/01/04/W4m7H.jpeg",alt:"测试"}})]),t._v(" "),s("p",[t._v("使用“新前”与“旧后”这两个节点进行对比，对比它们是否是同一个节点，如果是同一个节点，则进行更新节点的操作。当“新前”与“旧后”是同一个节点时，在真实DOM中除了做更新操作外，还需要将节点移动到oldChildren中所有未处理节点的最前面")]),t._v(" "),s("p",[s("strong",[t._v("如果前面这4种方式对比之后都没找到相同的节点，这时再通过循环的方式去oldChildren中详细找一圈，看看能否找到。大部分情况下，通过前面这4种方式就可以找到相同的节点，所以节省了很多次循环操作。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);